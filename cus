import pandas as pd # for dataframes
import matplotlib.pyplot as plt # for plotting graphs
import seaborn as sns # for plotting graphs
import datetime as dt
from google.colab import files 
uploaded = files.upload()data = pd.read_excel("Online Retail.xlsx")
data.head()
data.tail()
data.info()
data= data[pd.notnull(data['CustomerID'])]
filtered_data=data[['Country','CustomerID']].drop_duplicates()
filtered_data.Country.value_counts()[:10].plot(kind='bar')
uk_data=data[data.Country=='United Kingdom']
uk_data.info()
uk_data.describe()
uk_data = uk_data[(uk_data['Quantity']>0)]
uk_data.info()
uk_data=uk_data[['CustomerID','InvoiceDate','InvoiceNo','Quantity','UnitPrice']]
uk_data['TotalPrice'] = uk_data['Quantity'] * uk_data['UnitPrice']
uk_data['InvoiceDate'].min(),uk_data['InvoiceDate'].max()
PRESENT = dt.datetime(2011,12,10)
uk_data['InvoiceDate'] = pd.to_datetime(uk_data['InvoiceDate'])
uk_data.head()
rfm= uk_data.groupby('CustomerID').agg({'InvoiceDate': lambda date: (PRESENT - date.max()).days,
                                        'InvoiceNo': lambda num: len(num),
                                        'TotalPrice': lambda price: price.sum()})
                                        rfm.columns
                                        rfm.columns=['monetary','frequency','recency']
rfm['recency'] = rfm['recency'].astype(int)
rfm.head()
rfm['r_quartile'] = pd.qcut(rfm['recency'], 4, ['1','2','3','4'])
rfm['f_quartile'] = pd.qcut(rfm['frequency'], 4, ['4','3','2','1'])
rfm['m_quartile'] = pd.qcut(rfm['monetary'], 4, ['4','3','2','1'])
rfm.head()
rfm['RFM_Score'] = rfm.r_quartile.astype(str)+ rfm.f_quartile.astype(str) + rfm.m_quartile.astype(str)
rfm.head()
rfm[rfm['RFM_Score']=='111'].sort_values('monetary', ascending=False).head()
n = int(input("Enter number of data points to be iterated upon.\nFor all data points, enter 0. "))
if n == 0: n = sheet.max_row + 1
# sheet.max_row + 1
for row in range(2, n):
  flag = False
  for customer in customerID_list: 
    if sheet["G" + str(row)].value == customer: flag = True
  if flag == False: customerID_list.append(sheet["G" + str(row)].value)
  
print('The customer list is: ' + str(customerID_list))
print('Total number of of customers in the selected data set : ' + str(len(customerID_list))
for customer in customerID_list:
  customer_spending = 0
  for row in range(2, n):
    if sheet["G" + str(row)].value == customer: customer_spending += sheet["F" + str(row)].value * sheet["D" + str(row)].value
  if customer_spending > 0 and customer_spending <=500: low_spend.append(customer)
  elif customer_spending > 500 and customer_spending <=1000: medium_spend.append(customer)
  elif customer_spending > 1000: high_spend.append(customer)
  else: discounts.append(customer)

  if customer_spending > 0: print('Customer ID: ' + str(customer) + ' spent £ ' + str(abs(round(customer_spending, 2))))
  elif customer_spending < 0: print('Customer ID: ' + str(customer) + ' got a gift voucher of £ ' + str(abs(round(customer_spending, 2))))
  elif customer_spending == 0: print('Customer ID: ' + str(customer) + ' had no net transaction.')
  print("Number of 'Low' spending customers are: " + str(len(low_spend)) + '\nTheir IDs are: ')
for i in low_spend: print(str(i) + ', ', end='')
print("\n\nNumber of 'Medium' spending customers are: " + str(len(medium_spend)) + '\nTheir IDs are: ')
for i in medium_spend: print(str(i) + ', ', end='')
print("\n\nNumber of 'High' spending customers are: " + str(len(high_spend)) + '\nTheir IDs are: ')
for i in high_spend: print(str(i) + ', ', end='')
print("\n\nNumber of customers who recieved a 'Discount' are: " + str(len(discounts)) + '\nTheir IDs are: ')
for i in discounts: print(str(i) + ', ', end='')
